//1
let x=0;
let a=new Promise(function(resolve,reject){
   setTimeout(() => {
      resolve(x=10);
   }, 3000);
   
});

a
.then(function(){
   console.log(x);
});

//2
let x=0;
let a=new Promise(function(resolve,reject){
   setTimeout(() => {
      resolve(x=10);
      reject(x=1000);
   }, 3000);
   
});

a
.then(function(){
   console.log(x);
});

//3
let a = new Promise((resolve, reject) => {
  let randomNumber = Math.random();
setTimeout(() => {
    if(randomNumber <= 0.5) {
      resolve();
    } else if(randomNumber > 0.5) {
      reject();
  }
  }, randomNumber*10000);
});
a
.then((result)=>{
   console.log('successfully');
})
.catch((error)=>{
	console.log('unsuccessfully');
})

//4
let a = new Promise((resolve, reject) => {
  let randomNumber = Math.random();
setTimeout(() => {
    if(randomNumber <= 0.5) {
      resolve();
    } else {
      reject();
  }
  }, 5000);
});
a
.then((result)=>{
   console.log('successfully');
})
.catch((error)=>{
	console.log('unsuccessfully');
})

//5
function Random(){
let min=Math.ceil(1000);
let max=Math.ceil(5000);
return Math.floor(Math.random() * (max - min)) + min;
  }
let p1 = new Promise((resolve, reject) => {
const temp1=Random();
setTimeout(() => {
    resolve(temp1);
  },temp1 );
});
let p2 = new Promise((resolve, reject) => {
const temp2=Random();
setTimeout(() => {
    resolve(temp2);
  },temp2 );
});
let p3 = new Promise((resolve, reject) => {
const temp3=Random();
setTimeout(() => {
    resolve(temp3);
  },temp3 );
});
Promise.all([p1,p2,p3]).then(val => {
//console.log("Array is: ", val);
  const sum=val.reduce((sum1, item) => sum1+item,0 );
  console.log(sum);
});
